{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Trajan Pro;}{\f1\fnil\fcharset0 Segoe UI Emoji;}{\f2\fnil\fcharset0 Sitka Text;}{\f3\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;\red255\green255\blue255;\red0\green0\blue0;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\qc\b\f0\fs36\lang1033 Project Report on GPS Navigation with Leaflet\par
\f1\par

\pard\fs24 Certificate of the Project Guide : \par
\par
\cf1\b0\i\fs22 [Certificate content goes here]\cf0\i0\par
\par
\b\fs24 Certificate of the Organization :\par
\par
\cf1\b0\i\fs22 [Certificate content goes here]\par
\cf0\i0\par
\b\fs24 Acknowledgement:\par
\par
\cf1\b0\i\fs22 [Content goes here]\cf0\i0\par
\par
\b\fs24 Synopsis / Abstract :\par
\b0\fs22\par
This project demonstrates a simple GPS navigation system using the Leaflet library. The system allows users to set start and end points on a map and calculates the shortest path between these points, displaying the route and distance in kilometers.\par
\par
\b\fs28 Table of Contents:\par
\b0\fs22\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sl276\slmult1\f2 Introduction\par
{\pntext\f3\'B7\tab}About Organization\par
{\pntext\f3\'B7\tab}Problem Definition\par
{\pntext\f3\'B7\tab}Hardware Configuration\par
{\pntext\f3\'B7\tab}Software Configuration\par
{\pntext\f3\'B7\tab}System Study\par
{\pntext\f3\'B7\tab}Existing System with limitations\par
{\pntext\f3\'B7\tab}Proposed System with objectives\par
{\pntext\f3\'B7\tab}Problem Description\par
{\pntext\f3\'B7\tab}System Design & Development\par
{\pntext\f3\'B7\tab}System Flow Diagrams / Control Flow Diagrams\par
{\pntext\f3\'B7\tab}E-R Diagrams / Use Case Diagrams\par
{\pntext\f3\'B7\tab}Data Flow Diagram / Activity Diagrams\par
{\pntext\f3\'B7\tab}Input Design\par
{\pntext\f3\'B7\tab}File / Database Design\par
{\pntext\f3\'B7\tab}Output Design (includes Report Design)\par
{\pntext\f3\'B7\tab}User Interface Design (if Needed)\par
{\pntext\f3\'B7\tab}System Testing\par
{\pntext\f3\'B7\tab}Unit Testing\par
{\pntext\f3\'B7\tab}System Implementation and Maintenance\par
{\pntext\f3\'B7\tab}System Security Measures\par
{\pntext\f3\'B7\tab}Conclusion\par
{\pntext\f3\'B7\tab}Scope for Future Prospects\par
{\pntext\f3\'B7\tab}Bibliography and Web References\par
{\pntext\f3\'B7\tab}Appendices\par
{\pntext\f3\'B7\tab}Forms (input screenshots)\par
{\pntext\f3\'B7\tab}Sample Source Code\par
{\pntext\f3\'B7\tab}Output Screenshots\par
{\pntext\f3\'B7\tab}Reports\par

\pard\sl276\slmult1\par
\par
\par

\pard\b\f1\fs28 1. Introduction\par
\b0\fs22\par
\b About Organization:\par
\b0\par
\cf1\i [Details about the organization]\cf0\i0\par
\par
\b\fs24 Problem Definition\par
\b0\fs22\par
To create a user-friendly GPS navigation system that allows users to select start and end points on a map and view the shortest route and distance.\par
\b\fs24\par
Hardware Configuration\par
\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\b0\fs22 Computer with internet access\par
{\pntext\f3\'B7\tab}Browser supporting JavaScript\par

\pard\b\fs24\par
Software Configuration:\par
\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\b0\fs22 HTML\par
{\pntext\f3\'B7\tab}CSS\par
{\pntext\f3\'B7\tab}JavaScript\par
{\pntext\f3\'B7\tab}Leaflet.js\par
{\pntext\f3\'B7\tab}Leaflet Routing Machine\par

\pard\par
\par

\pard\b\fs28 2. System Study\par
\b0\fs22\par
\b\fs24 Existing System with limitations :\par
\b0\fs22\par
Current GPS systems often require complex setups or subscriptions. This project aims to provide a free, simplified alternative.\par
\par
\b Proposed System with objectives :\par
\b0\par
To develop a simple, accessible GPS navigation tool using open-source technologies.\par
\par
\b\fs24 Problem Description :\par
\b0\fs22\par
Creating an intuitive map interface for users to select points and calculate routes.\par
\par
\b\fs28 3. System Design & Development :\par
\b0\fs22\par
\b\fs24 System Flow Diagrams / Control Flow Diagrams\par
\par
\cf1\b0\i\fs22 [Include diagrams here]\par
\cf0\i0\par
\b\fs24 E-R Diagrams / Use Case Diagrams\par
\par
\cf1\b0\i\fs22 [Include diagrams here]\par
\cf0\i0\par
\b Data Flow Diagram / Activity Diagrams\par
\b0\par
\cf1\i [Include diagrams here]\cf0\i0\par
\par
\b\fs24 Input Design :\par
\par
\b0\fs22 Users click on the map to set start and end points.\par
\par
\b\fs24 File / Database Design :\b0\fs22\par
\par
No database used in this simple implementation.\par
\par
\b\fs24 Output Design (includes Report Design):\b0\fs22\par
\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720 Map with route displayed\par
{\pntext\f3\'B7\tab}Distance in kilometers shown\par
{\pntext\f3\'B7\tab}User Interface Design (if Needed)\par
{\pntext\f3\'B7\tab}The interface consists of buttons for setting points and a map for visualization.\par

\pard\par
\b\fs28 4. System Testing\par
\b0\fs22\par
\b\fs24 Unit Testing\b0\fs22\par
\par

\pard 
{\pntext\f1 I.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pnucrm{\pntxta.}}
\fi-360\li720 Test setting start and end points.\par
{\pntext\f1 II.\tab}Test route calculation.\par
{\pntext\f1 III.\tab}Test distance display.\par

\pard\par
\par

\pard\b\fs28 5. System Implementation and Maintenance\b0\fs22\par
\par
\b\fs24 System Security Measures:\par
\b0\fs22\par
Ensure that user inputs are valid and handle map click events securely.\par
\par
\b\fs28 6. Conclusion\par
\b0\fs22\par
\b\fs24 Scope for Future Prospects:\par
\b0\fs22\par
Integration with real-time traffic data.\par
Advanced route customization options.\par
\par
\b\fs24 Bibliography and Web References\par
\par
\b0\fs22 Leaflet documentation\cf1\ul\b : {{\field{\*\fldinst{HYPERLINK https://leafletjs.com }}{\fldrslt{https://leafletjs.com}}}}\cf0\ulnone\b0\f1\fs22\par
Leaflet Routing Machine documentation: {\cf1\ul\b{\field{\*\fldinst{HYPERLINK http://www.liedman.net/leaflet-routing-machine/ }}{\fldrslt{http://www.liedman.net/leaflet-routing-machine/}}}}\cf1\ul\b\f1\fs22\par
\cf0\ulnone\b0\par
\b\fs24 Appendices :\par
\b0\fs22\par
\b\fs24 Forms (input screenshots):\b0\fs22\par
\par
\cf1\i [Include screenshots here]\par
\cf0\i0\par
\b\fs28 Sample Source Code\par
\b0\fs22\par
\ul\b\fs24 javascript\par
Copy code\par
\par
\cf3\highlight4\ulnone\b0\fs22 let map;\par
let startMarker = null;\par
let endMarker = null;\par
let isSettingStart = false;\par
let isSettingEnd = false;\par
document.addEventListener('DOMContentLoaded', () => \{\par
       map = L.map('map').setView([39.8283, -98.5795], 4);\par
    L.tileLayer('https://\{s\}.tile.openstreetmap.org/\{z\}/\{x\}/\{y\}.png', \{\par
        attribution: '\'c2\'a9 OpenStreetMap contributors'\par
    \}).addTo(map);\par
    document.getElementById('set-start').addEventListener('click', () => \{\par
        isSettingStart = true;\par
        isSettingEnd = false;\par
    \});\par
   document.getElementById('set-end').addEventListener('click', () => \{\par
        isSettingStart = false;\par
        isSettingEnd = true;\par
    \});\par
      map.on('click', function(e) \{\par
        if (isSettingStart) \{\par
            if (startMarker) map.removeLayer(startMarker);\par
            startMarker = L.marker(e.latlng).addTo(map).bindPopup("Start Point").openPopup();\par
            isSettingStart = false;\par
        \} else if (isSettingEnd) \{\par
            if (endMarker) map.removeLayer(endMarker);\par
            endMarker = L.marker(e.latlng).addTo(map).bindPopup("End Point").openPopup();\par
            isSettingEnd = false;\par
        \}\par
    \});\par
    document.getElementById('find-path').addEventListener('click', () => \{\par
        if (!startMarker || !endMarker) \{\par
            alert('Please set both start and end points.');\par
            return;\par
        \}\par
      const startLatLng = startMarker.getLatLng();\par
        const endLatLng = endMarker.getLatLng();\par
        L.Routing.control(\{\par
            waypoints: [\par
                L.latLng(startLatLng.lat, startLatLng.lng),\par
                L.latLng(endLatLng.lat, endLatLng.lng)\par
            ],\par
            routeWhileDragging: true\par
        \}).addTo(map).on('routesfound', function(e) \{\par
            const distance = e.routes[0].summary.totalDistance / 1000; // in kilometers\par
            document.getElementById('result').innerText = `Distance: $\{distance.toFixed(2)\}km`;\par
        \});\par
    \});\par
\});\par
\par
\cf0\highlight0\b\fs28 Output Screenshots:\par
\b0\fs22\par
\cf1\i [Include screenshots of the map with routes]\par
\cf0\i0\par
\b\fs24 Reports:\par
\b0\fs22\par
\cf1\i [Include any generated reports]\cf0\i0\par
}
 